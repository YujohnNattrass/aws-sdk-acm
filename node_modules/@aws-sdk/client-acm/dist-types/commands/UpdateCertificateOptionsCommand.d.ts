import { Command as $Command } from "@aws-sdk/smithy-client";
import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
import { ACMClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "../ACMClient";
import { UpdateCertificateOptionsRequest } from "../models/models_0";
export interface UpdateCertificateOptionsCommandInput extends UpdateCertificateOptionsRequest {
}
export interface UpdateCertificateOptionsCommandOutput extends __MetadataBearer {
}
/**
 * <p>Updates a certificate. Currently, you can use this function to specify whether to opt in
 *       to or out of recording your certificate in a certificate transparency log. For more
 *       information, see <a href="https://docs.aws.amazon.com/acm/latest/userguide/acm-bestpractices.html#best-practices-transparency"> Opting Out of
 *         Certificate Transparency Logging</a>. </p>
 * @example
 * Use a bare-bones client and the command you need to make an API call.
 * ```javascript
 * import { ACMClient, UpdateCertificateOptionsCommand } from "@aws-sdk/client-acm"; // ES Modules import
 * // const { ACMClient, UpdateCertificateOptionsCommand } = require("@aws-sdk/client-acm"); // CommonJS import
 * const client = new ACMClient(config);
 * const command = new UpdateCertificateOptionsCommand(input);
 * const response = await client.send(command);
 * ```
 *
 * @see {@link UpdateCertificateOptionsCommandInput} for command's `input` shape.
 * @see {@link UpdateCertificateOptionsCommandOutput} for command's `response` shape.
 * @see {@link ACMClientResolvedConfig | config} for ACMClient's `config` shape.
 *
 */
export declare class UpdateCertificateOptionsCommand extends $Command<UpdateCertificateOptionsCommandInput, UpdateCertificateOptionsCommandOutput, ACMClientResolvedConfig> {
    readonly input: UpdateCertificateOptionsCommandInput;
    constructor(input: UpdateCertificateOptionsCommandInput);
    /**
     * @internal
     */
    resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: ACMClientResolvedConfig, options?: __HttpHandlerOptions): Handler<UpdateCertificateOptionsCommandInput, UpdateCertificateOptionsCommandOutput>;
    private serialize;
    private deserialize;
}
