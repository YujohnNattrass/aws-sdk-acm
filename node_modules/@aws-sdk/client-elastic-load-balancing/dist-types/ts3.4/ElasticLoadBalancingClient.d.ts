import { EndpointsInputConfig, EndpointsResolvedConfig, RegionInputConfig, RegionResolvedConfig } from "@aws-sdk/config-resolver";
import { HostHeaderInputConfig, HostHeaderResolvedConfig } from "@aws-sdk/middleware-host-header";
import { RetryInputConfig, RetryResolvedConfig } from "@aws-sdk/middleware-retry";
import { AwsAuthInputConfig, AwsAuthResolvedConfig } from "@aws-sdk/middleware-signing";
import { UserAgentInputConfig, UserAgentResolvedConfig } from "@aws-sdk/middleware-user-agent";
import { HttpHandler as __HttpHandler } from "@aws-sdk/protocol-http";
import { Client as __Client, SmithyConfiguration as __SmithyConfiguration, SmithyResolvedConfiguration as __SmithyResolvedConfiguration } from "@aws-sdk/smithy-client";
import { Credentials as __Credentials, Decoder as __Decoder, Encoder as __Encoder, HashConstructor as __HashConstructor, HttpHandlerOptions as __HttpHandlerOptions, Logger as __Logger, Provider as __Provider, Provider, RegionInfoProvider, StreamCollector as __StreamCollector, UrlParser as __UrlParser, UserAgent as __UserAgent } from "@aws-sdk/types";
import { AddTagsCommandInput, AddTagsCommandOutput } from "./commands/AddTagsCommand";
import { ApplySecurityGroupsToLoadBalancerCommandInput, ApplySecurityGroupsToLoadBalancerCommandOutput } from "./commands/ApplySecurityGroupsToLoadBalancerCommand";
import { AttachLoadBalancerToSubnetsCommandInput, AttachLoadBalancerToSubnetsCommandOutput } from "./commands/AttachLoadBalancerToSubnetsCommand";
import { ConfigureHealthCheckCommandInput, ConfigureHealthCheckCommandOutput } from "./commands/ConfigureHealthCheckCommand";
import { CreateAppCookieStickinessPolicyCommandInput, CreateAppCookieStickinessPolicyCommandOutput } from "./commands/CreateAppCookieStickinessPolicyCommand";
import { CreateLBCookieStickinessPolicyCommandInput, CreateLBCookieStickinessPolicyCommandOutput } from "./commands/CreateLBCookieStickinessPolicyCommand";
import { CreateLoadBalancerCommandInput, CreateLoadBalancerCommandOutput } from "./commands/CreateLoadBalancerCommand";
import { CreateLoadBalancerListenersCommandInput, CreateLoadBalancerListenersCommandOutput } from "./commands/CreateLoadBalancerListenersCommand";
import { CreateLoadBalancerPolicyCommandInput, CreateLoadBalancerPolicyCommandOutput } from "./commands/CreateLoadBalancerPolicyCommand";
import { DeleteLoadBalancerCommandInput, DeleteLoadBalancerCommandOutput } from "./commands/DeleteLoadBalancerCommand";
import { DeleteLoadBalancerListenersCommandInput, DeleteLoadBalancerListenersCommandOutput } from "./commands/DeleteLoadBalancerListenersCommand";
import { DeleteLoadBalancerPolicyCommandInput, DeleteLoadBalancerPolicyCommandOutput } from "./commands/DeleteLoadBalancerPolicyCommand";
import { DeregisterInstancesFromLoadBalancerCommandInput, DeregisterInstancesFromLoadBalancerCommandOutput } from "./commands/DeregisterInstancesFromLoadBalancerCommand";
import { DescribeAccountLimitsCommandInput, DescribeAccountLimitsCommandOutput } from "./commands/DescribeAccountLimitsCommand";
import { DescribeInstanceHealthCommandInput, DescribeInstanceHealthCommandOutput } from "./commands/DescribeInstanceHealthCommand";
import { DescribeLoadBalancerAttributesCommandInput, DescribeLoadBalancerAttributesCommandOutput } from "./commands/DescribeLoadBalancerAttributesCommand";
import { DescribeLoadBalancerPoliciesCommandInput, DescribeLoadBalancerPoliciesCommandOutput } from "./commands/DescribeLoadBalancerPoliciesCommand";
import { DescribeLoadBalancerPolicyTypesCommandInput, DescribeLoadBalancerPolicyTypesCommandOutput } from "./commands/DescribeLoadBalancerPolicyTypesCommand";
import { DescribeLoadBalancersCommandInput, DescribeLoadBalancersCommandOutput } from "./commands/DescribeLoadBalancersCommand";
import { DescribeTagsCommandInput, DescribeTagsCommandOutput } from "./commands/DescribeTagsCommand";
import { DetachLoadBalancerFromSubnetsCommandInput, DetachLoadBalancerFromSubnetsCommandOutput } from "./commands/DetachLoadBalancerFromSubnetsCommand";
import { DisableAvailabilityZonesForLoadBalancerCommandInput, DisableAvailabilityZonesForLoadBalancerCommandOutput } from "./commands/DisableAvailabilityZonesForLoadBalancerCommand";
import { EnableAvailabilityZonesForLoadBalancerCommandInput, EnableAvailabilityZonesForLoadBalancerCommandOutput } from "./commands/EnableAvailabilityZonesForLoadBalancerCommand";
import { ModifyLoadBalancerAttributesCommandInput, ModifyLoadBalancerAttributesCommandOutput } from "./commands/ModifyLoadBalancerAttributesCommand";
import { RegisterInstancesWithLoadBalancerCommandInput, RegisterInstancesWithLoadBalancerCommandOutput } from "./commands/RegisterInstancesWithLoadBalancerCommand";
import { RemoveTagsCommandInput, RemoveTagsCommandOutput } from "./commands/RemoveTagsCommand";
import { SetLoadBalancerListenerSSLCertificateCommandInput, SetLoadBalancerListenerSSLCertificateCommandOutput } from "./commands/SetLoadBalancerListenerSSLCertificateCommand";
import { SetLoadBalancerPoliciesForBackendServerCommandInput, SetLoadBalancerPoliciesForBackendServerCommandOutput } from "./commands/SetLoadBalancerPoliciesForBackendServerCommand";
import { SetLoadBalancerPoliciesOfListenerCommandInput, SetLoadBalancerPoliciesOfListenerCommandOutput } from "./commands/SetLoadBalancerPoliciesOfListenerCommand";
export declare type ServiceInputTypes = AddTagsCommandInput | ApplySecurityGroupsToLoadBalancerCommandInput | AttachLoadBalancerToSubnetsCommandInput | ConfigureHealthCheckCommandInput | CreateAppCookieStickinessPolicyCommandInput | CreateLBCookieStickinessPolicyCommandInput | CreateLoadBalancerCommandInput | CreateLoadBalancerListenersCommandInput | CreateLoadBalancerPolicyCommandInput | DeleteLoadBalancerCommandInput | DeleteLoadBalancerListenersCommandInput | DeleteLoadBalancerPolicyCommandInput | DeregisterInstancesFromLoadBalancerCommandInput | DescribeAccountLimitsCommandInput | DescribeInstanceHealthCommandInput | DescribeLoadBalancerAttributesCommandInput | DescribeLoadBalancerPoliciesCommandInput | DescribeLoadBalancerPolicyTypesCommandInput | DescribeLoadBalancersCommandInput | DescribeTagsCommandInput | DetachLoadBalancerFromSubnetsCommandInput | DisableAvailabilityZonesForLoadBalancerCommandInput | EnableAvailabilityZonesForLoadBalancerCommandInput | ModifyLoadBalancerAttributesCommandInput | RegisterInstancesWithLoadBalancerCommandInput | RemoveTagsCommandInput | SetLoadBalancerListenerSSLCertificateCommandInput | SetLoadBalancerPoliciesForBackendServerCommandInput | SetLoadBalancerPoliciesOfListenerCommandInput;
export declare type ServiceOutputTypes = AddTagsCommandOutput | ApplySecurityGroupsToLoadBalancerCommandOutput | AttachLoadBalancerToSubnetsCommandOutput | ConfigureHealthCheckCommandOutput | CreateAppCookieStickinessPolicyCommandOutput | CreateLBCookieStickinessPolicyCommandOutput | CreateLoadBalancerCommandOutput | CreateLoadBalancerListenersCommandOutput | CreateLoadBalancerPolicyCommandOutput | DeleteLoadBalancerCommandOutput | DeleteLoadBalancerListenersCommandOutput | DeleteLoadBalancerPolicyCommandOutput | DeregisterInstancesFromLoadBalancerCommandOutput | DescribeAccountLimitsCommandOutput | DescribeInstanceHealthCommandOutput | DescribeLoadBalancerAttributesCommandOutput | DescribeLoadBalancerPoliciesCommandOutput | DescribeLoadBalancerPolicyTypesCommandOutput | DescribeLoadBalancersCommandOutput | DescribeTagsCommandOutput | DetachLoadBalancerFromSubnetsCommandOutput | DisableAvailabilityZonesForLoadBalancerCommandOutput | EnableAvailabilityZonesForLoadBalancerCommandOutput | ModifyLoadBalancerAttributesCommandOutput | RegisterInstancesWithLoadBalancerCommandOutput | RemoveTagsCommandOutput | SetLoadBalancerListenerSSLCertificateCommandOutput | SetLoadBalancerPoliciesForBackendServerCommandOutput | SetLoadBalancerPoliciesOfListenerCommandOutput;
export interface ClientDefaults extends Partial<__SmithyResolvedConfiguration<__HttpHandlerOptions>> {
    
    requestHandler?: __HttpHandler;
    
    sha256?: __HashConstructor;
    
    urlParser?: __UrlParser;
    
    bodyLengthChecker?: (body: any) => number | undefined;
    
    streamCollector?: __StreamCollector;
    
    base64Decoder?: __Decoder;
    
    base64Encoder?: __Encoder;
    
    utf8Decoder?: __Decoder;
    
    utf8Encoder?: __Encoder;
    
    runtime?: string;
    
    disableHostPrefix?: boolean;
    
    maxAttempts?: number | __Provider<number>;
    
    retryMode?: string | __Provider<string>;
    
    logger?: __Logger;
    
    useDualstackEndpoint?: boolean | __Provider<boolean>;
    
    useFipsEndpoint?: boolean | __Provider<boolean>;
    
    serviceId?: string;
    
    region?: string | __Provider<string>;
    
    credentialDefaultProvider?: (input: any) => __Provider<__Credentials>;
    
    regionInfoProvider?: RegionInfoProvider;
    
    defaultUserAgentProvider?: Provider<__UserAgent>;
}
declare type ElasticLoadBalancingClientConfigType = Partial<__SmithyConfiguration<__HttpHandlerOptions>> & ClientDefaults & RegionInputConfig & EndpointsInputConfig & RetryInputConfig & HostHeaderInputConfig & AwsAuthInputConfig & UserAgentInputConfig;

export interface ElasticLoadBalancingClientConfig extends ElasticLoadBalancingClientConfigType {
}
declare type ElasticLoadBalancingClientResolvedConfigType = __SmithyResolvedConfiguration<__HttpHandlerOptions> & Required<ClientDefaults> & RegionResolvedConfig & EndpointsResolvedConfig & RetryResolvedConfig & HostHeaderResolvedConfig & AwsAuthResolvedConfig & UserAgentResolvedConfig;

export interface ElasticLoadBalancingClientResolvedConfig extends ElasticLoadBalancingClientResolvedConfigType {
}

export declare class ElasticLoadBalancingClient extends __Client<__HttpHandlerOptions, ServiceInputTypes, ServiceOutputTypes, ElasticLoadBalancingClientResolvedConfig> {
    
    readonly config: ElasticLoadBalancingClientResolvedConfig;
    constructor(configuration: ElasticLoadBalancingClientConfig);
    
    destroy(): void;
}
export {};
