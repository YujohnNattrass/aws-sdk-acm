import { EndpointsInputConfig, EndpointsResolvedConfig, RegionInputConfig, RegionResolvedConfig } from "@aws-sdk/config-resolver";
import { HostHeaderInputConfig, HostHeaderResolvedConfig } from "@aws-sdk/middleware-host-header";
import { RetryInputConfig, RetryResolvedConfig } from "@aws-sdk/middleware-retry";
import { AwsAuthInputConfig, AwsAuthResolvedConfig } from "@aws-sdk/middleware-signing";
import { UserAgentInputConfig, UserAgentResolvedConfig } from "@aws-sdk/middleware-user-agent";
import { HttpHandler as __HttpHandler } from "@aws-sdk/protocol-http";
import { Client as __Client, SmithyConfiguration as __SmithyConfiguration, SmithyResolvedConfiguration as __SmithyResolvedConfiguration } from "@aws-sdk/smithy-client";
import { Credentials as __Credentials, Decoder as __Decoder, Encoder as __Encoder, HashConstructor as __HashConstructor, HttpHandlerOptions as __HttpHandlerOptions, Logger as __Logger, Provider as __Provider, Provider, RegionInfoProvider, StreamCollector as __StreamCollector, UrlParser as __UrlParser, UserAgent as __UserAgent } from "@aws-sdk/types";
import { AddListenerCertificatesCommandInput, AddListenerCertificatesCommandOutput } from "./commands/AddListenerCertificatesCommand";
import { AddTagsCommandInput, AddTagsCommandOutput } from "./commands/AddTagsCommand";
import { CreateListenerCommandInput, CreateListenerCommandOutput } from "./commands/CreateListenerCommand";
import { CreateLoadBalancerCommandInput, CreateLoadBalancerCommandOutput } from "./commands/CreateLoadBalancerCommand";
import { CreateRuleCommandInput, CreateRuleCommandOutput } from "./commands/CreateRuleCommand";
import { CreateTargetGroupCommandInput, CreateTargetGroupCommandOutput } from "./commands/CreateTargetGroupCommand";
import { DeleteListenerCommandInput, DeleteListenerCommandOutput } from "./commands/DeleteListenerCommand";
import { DeleteLoadBalancerCommandInput, DeleteLoadBalancerCommandOutput } from "./commands/DeleteLoadBalancerCommand";
import { DeleteRuleCommandInput, DeleteRuleCommandOutput } from "./commands/DeleteRuleCommand";
import { DeleteTargetGroupCommandInput, DeleteTargetGroupCommandOutput } from "./commands/DeleteTargetGroupCommand";
import { DeregisterTargetsCommandInput, DeregisterTargetsCommandOutput } from "./commands/DeregisterTargetsCommand";
import { DescribeAccountLimitsCommandInput, DescribeAccountLimitsCommandOutput } from "./commands/DescribeAccountLimitsCommand";
import { DescribeListenerCertificatesCommandInput, DescribeListenerCertificatesCommandOutput } from "./commands/DescribeListenerCertificatesCommand";
import { DescribeListenersCommandInput, DescribeListenersCommandOutput } from "./commands/DescribeListenersCommand";
import { DescribeLoadBalancerAttributesCommandInput, DescribeLoadBalancerAttributesCommandOutput } from "./commands/DescribeLoadBalancerAttributesCommand";
import { DescribeLoadBalancersCommandInput, DescribeLoadBalancersCommandOutput } from "./commands/DescribeLoadBalancersCommand";
import { DescribeRulesCommandInput, DescribeRulesCommandOutput } from "./commands/DescribeRulesCommand";
import { DescribeSSLPoliciesCommandInput, DescribeSSLPoliciesCommandOutput } from "./commands/DescribeSSLPoliciesCommand";
import { DescribeTagsCommandInput, DescribeTagsCommandOutput } from "./commands/DescribeTagsCommand";
import { DescribeTargetGroupAttributesCommandInput, DescribeTargetGroupAttributesCommandOutput } from "./commands/DescribeTargetGroupAttributesCommand";
import { DescribeTargetGroupsCommandInput, DescribeTargetGroupsCommandOutput } from "./commands/DescribeTargetGroupsCommand";
import { DescribeTargetHealthCommandInput, DescribeTargetHealthCommandOutput } from "./commands/DescribeTargetHealthCommand";
import { ModifyListenerCommandInput, ModifyListenerCommandOutput } from "./commands/ModifyListenerCommand";
import { ModifyLoadBalancerAttributesCommandInput, ModifyLoadBalancerAttributesCommandOutput } from "./commands/ModifyLoadBalancerAttributesCommand";
import { ModifyRuleCommandInput, ModifyRuleCommandOutput } from "./commands/ModifyRuleCommand";
import { ModifyTargetGroupAttributesCommandInput, ModifyTargetGroupAttributesCommandOutput } from "./commands/ModifyTargetGroupAttributesCommand";
import { ModifyTargetGroupCommandInput, ModifyTargetGroupCommandOutput } from "./commands/ModifyTargetGroupCommand";
import { RegisterTargetsCommandInput, RegisterTargetsCommandOutput } from "./commands/RegisterTargetsCommand";
import { RemoveListenerCertificatesCommandInput, RemoveListenerCertificatesCommandOutput } from "./commands/RemoveListenerCertificatesCommand";
import { RemoveTagsCommandInput, RemoveTagsCommandOutput } from "./commands/RemoveTagsCommand";
import { SetIpAddressTypeCommandInput, SetIpAddressTypeCommandOutput } from "./commands/SetIpAddressTypeCommand";
import { SetRulePrioritiesCommandInput, SetRulePrioritiesCommandOutput } from "./commands/SetRulePrioritiesCommand";
import { SetSecurityGroupsCommandInput, SetSecurityGroupsCommandOutput } from "./commands/SetSecurityGroupsCommand";
import { SetSubnetsCommandInput, SetSubnetsCommandOutput } from "./commands/SetSubnetsCommand";
export declare type ServiceInputTypes = AddListenerCertificatesCommandInput | AddTagsCommandInput | CreateListenerCommandInput | CreateLoadBalancerCommandInput | CreateRuleCommandInput | CreateTargetGroupCommandInput | DeleteListenerCommandInput | DeleteLoadBalancerCommandInput | DeleteRuleCommandInput | DeleteTargetGroupCommandInput | DeregisterTargetsCommandInput | DescribeAccountLimitsCommandInput | DescribeListenerCertificatesCommandInput | DescribeListenersCommandInput | DescribeLoadBalancerAttributesCommandInput | DescribeLoadBalancersCommandInput | DescribeRulesCommandInput | DescribeSSLPoliciesCommandInput | DescribeTagsCommandInput | DescribeTargetGroupAttributesCommandInput | DescribeTargetGroupsCommandInput | DescribeTargetHealthCommandInput | ModifyListenerCommandInput | ModifyLoadBalancerAttributesCommandInput | ModifyRuleCommandInput | ModifyTargetGroupAttributesCommandInput | ModifyTargetGroupCommandInput | RegisterTargetsCommandInput | RemoveListenerCertificatesCommandInput | RemoveTagsCommandInput | SetIpAddressTypeCommandInput | SetRulePrioritiesCommandInput | SetSecurityGroupsCommandInput | SetSubnetsCommandInput;
export declare type ServiceOutputTypes = AddListenerCertificatesCommandOutput | AddTagsCommandOutput | CreateListenerCommandOutput | CreateLoadBalancerCommandOutput | CreateRuleCommandOutput | CreateTargetGroupCommandOutput | DeleteListenerCommandOutput | DeleteLoadBalancerCommandOutput | DeleteRuleCommandOutput | DeleteTargetGroupCommandOutput | DeregisterTargetsCommandOutput | DescribeAccountLimitsCommandOutput | DescribeListenerCertificatesCommandOutput | DescribeListenersCommandOutput | DescribeLoadBalancerAttributesCommandOutput | DescribeLoadBalancersCommandOutput | DescribeRulesCommandOutput | DescribeSSLPoliciesCommandOutput | DescribeTagsCommandOutput | DescribeTargetGroupAttributesCommandOutput | DescribeTargetGroupsCommandOutput | DescribeTargetHealthCommandOutput | ModifyListenerCommandOutput | ModifyLoadBalancerAttributesCommandOutput | ModifyRuleCommandOutput | ModifyTargetGroupAttributesCommandOutput | ModifyTargetGroupCommandOutput | RegisterTargetsCommandOutput | RemoveListenerCertificatesCommandOutput | RemoveTagsCommandOutput | SetIpAddressTypeCommandOutput | SetRulePrioritiesCommandOutput | SetSecurityGroupsCommandOutput | SetSubnetsCommandOutput;
export interface ClientDefaults extends Partial<__SmithyResolvedConfiguration<__HttpHandlerOptions>> {
    
    requestHandler?: __HttpHandler;
    
    sha256?: __HashConstructor;
    
    urlParser?: __UrlParser;
    
    bodyLengthChecker?: (body: any) => number | undefined;
    
    streamCollector?: __StreamCollector;
    
    base64Decoder?: __Decoder;
    
    base64Encoder?: __Encoder;
    
    utf8Decoder?: __Decoder;
    
    utf8Encoder?: __Encoder;
    
    runtime?: string;
    
    disableHostPrefix?: boolean;
    
    maxAttempts?: number | __Provider<number>;
    
    retryMode?: string | __Provider<string>;
    
    logger?: __Logger;
    
    useDualstackEndpoint?: boolean | __Provider<boolean>;
    
    useFipsEndpoint?: boolean | __Provider<boolean>;
    
    serviceId?: string;
    
    region?: string | __Provider<string>;
    
    credentialDefaultProvider?: (input: any) => __Provider<__Credentials>;
    
    regionInfoProvider?: RegionInfoProvider;
    
    defaultUserAgentProvider?: Provider<__UserAgent>;
}
declare type ElasticLoadBalancingV2ClientConfigType = Partial<__SmithyConfiguration<__HttpHandlerOptions>> & ClientDefaults & RegionInputConfig & EndpointsInputConfig & RetryInputConfig & HostHeaderInputConfig & AwsAuthInputConfig & UserAgentInputConfig;

export interface ElasticLoadBalancingV2ClientConfig extends ElasticLoadBalancingV2ClientConfigType {
}
declare type ElasticLoadBalancingV2ClientResolvedConfigType = __SmithyResolvedConfiguration<__HttpHandlerOptions> & Required<ClientDefaults> & RegionResolvedConfig & EndpointsResolvedConfig & RetryResolvedConfig & HostHeaderResolvedConfig & AwsAuthResolvedConfig & UserAgentResolvedConfig;

export interface ElasticLoadBalancingV2ClientResolvedConfig extends ElasticLoadBalancingV2ClientResolvedConfigType {
}

export declare class ElasticLoadBalancingV2Client extends __Client<__HttpHandlerOptions, ServiceInputTypes, ServiceOutputTypes, ElasticLoadBalancingV2ClientResolvedConfig> {
    
    readonly config: ElasticLoadBalancingV2ClientResolvedConfig;
    constructor(configuration: ElasticLoadBalancingV2ClientConfig);
    
    destroy(): void;
}
export {};
