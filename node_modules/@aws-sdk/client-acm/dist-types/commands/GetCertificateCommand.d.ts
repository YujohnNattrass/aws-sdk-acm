import { Command as $Command } from "@aws-sdk/smithy-client";
import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
import { ACMClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "../ACMClient";
import { GetCertificateRequest, GetCertificateResponse } from "../models/models_0";
export interface GetCertificateCommandInput extends GetCertificateRequest {
}
export interface GetCertificateCommandOutput extends GetCertificateResponse, __MetadataBearer {
}
/**
 * <p>Retrieves an Amazon-issued certificate and its certificate chain. The chain consists of
 *       the certificate of the issuing CA and the intermediate certificates of any other subordinate
 *       CAs. All of the certificates are base64 encoded. You can use <a href="https://wiki.openssl.org/index.php/Command_Line_Utilities">OpenSSL</a> to decode
 *       the certificates and inspect individual fields.</p>
 * @example
 * Use a bare-bones client and the command you need to make an API call.
 * ```javascript
 * import { ACMClient, GetCertificateCommand } from "@aws-sdk/client-acm"; // ES Modules import
 * // const { ACMClient, GetCertificateCommand } = require("@aws-sdk/client-acm"); // CommonJS import
 * const client = new ACMClient(config);
 * const command = new GetCertificateCommand(input);
 * const response = await client.send(command);
 * ```
 *
 * @see {@link GetCertificateCommandInput} for command's `input` shape.
 * @see {@link GetCertificateCommandOutput} for command's `response` shape.
 * @see {@link ACMClientResolvedConfig | config} for ACMClient's `config` shape.
 *
 */
export declare class GetCertificateCommand extends $Command<GetCertificateCommandInput, GetCertificateCommandOutput, ACMClientResolvedConfig> {
    readonly input: GetCertificateCommandInput;
    constructor(input: GetCertificateCommandInput);
    /**
     * @internal
     */
    resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: ACMClientResolvedConfig, options?: __HttpHandlerOptions): Handler<GetCertificateCommandInput, GetCertificateCommandOutput>;
    private serialize;
    private deserialize;
}
